version: '3.8'

services:
  app:
    image: task-management:latest
    container_name: task-management-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Use environment variables instead of hardcoded values
      - SPRING_PROFILES_ACTIVE=prod
      - FLYWAY_ENABLED=true
      - DB_URL=jdbc:postgresql://db:5432/task_management
      - DB_USERNAME=${POSTGRESQL_USERNAME:-postgres}
      - DB_PASSWORD=${POSTGRESQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ISSUER=${JWT_ISSUER:-task-management-prod}
      - JWT_EXPIRATION_MINUTE=${JWT_EXPIRATION_MINUTE:-1440}
    depends_on:
      - db
      - redis
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16
    container_name: task-management-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: task_management
      POSTGRES_USER: ${POSTGRESQL_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    ports:
      # Only bind to localhost for security
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRESQL_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: task-management-redis
    restart: unless-stopped
    ports:
      # Only bind to localhost for security
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    # Optional: Add Redis password
    # command: redis-server --requirepass ${REDIS_PASSWORD}

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge